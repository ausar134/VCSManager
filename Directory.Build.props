<Project>
	<PropertyGroup Label="Project">
		<RootNamespace>$(MSBuildProjectName)</RootNamespace>
		<LangVersion>8.0</LangVersion>
		<GenerateDocumentationFile>true</GenerateDocumentationFile>
		<NoWarn>1591</NoWarn>
		<SuppressNETCoreSdkPreviewMessage>true</SuppressNETCoreSdkPreviewMessage>
		<!-- We only target a single framework hence the subdir is not needed -->
		<AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
		<!-- Same but for runtime assemblies -->
		<AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
		<Nullable>enable</Nullable>
	</PropertyGroup>

	<PropertyGroup Label="Code Analysis Ruleset" Condition="Exists('$(MSBuildThisFileDirectory)\dotnet.ruleset')">
		<CodeAnalysisRuleset>$(MSBuildThisFileDirectory)\dotnet.ruleset</CodeAnalysisRuleset>
	</PropertyGroup>

	<ItemGroup Label="Code Analysis Configuration" Condition="Exists('$(MSBuildThisFileDirectory)\stylecop.json')">
		<AdditionalFiles Include="$(MSBuildThisFileDirectory)\stylecop.json" Link="stylecop.json" />
	</ItemGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'" Label="Debug Settings">
		<DebugSymbols>true</DebugSymbols>
	</PropertyGroup>

	<PropertyGroup Label="Package">
		<PackageId></PackageId>
		<Authors>Aggelos Theofanous</Authors>
		<!-- Optional: Include PDB in the built .nupkg to enable debugging -->
		<!-- VS 2019 can fetch them through snupkg -->
		<!--<AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>-->
		<!-- Optional: Declare that the Repository URL can be published to NuSpec -->
		<PublishRepositoryUrl>true</PublishRepositoryUrl>
		<RepositoryType>git</RepositoryType>
		<!-- Optional: Embed source files that are not tracked by the source control manager to the PDB -->
		<!-- This is useful if you generate files during the build -->
		<EmbedUntrackedSources>true</EmbedUntrackedSources>
		<!-- Optional: Build symbol package (.snupkg) to distribute the PDB containing Source Link -->
		<IncludeSymbols>true</IncludeSymbols>
		<SymbolPackageFormat>snupkg</SymbolPackageFormat>
		<PackageLicenseFile>LICENSE.md</PackageLicenseFile>
	</PropertyGroup>

	<ItemGroup Label="Nugets" Condition="!$(IsTest)">
		<PackageReference Include="Microsoft.CodeAnalysis.FxCopAnalyzers" Version="2.9.8">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
		</PackageReference>
		<PackageReference Include="StyleCop.Analyzers" Version="1.1.118">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
		</PackageReference>
		<PackageReference Include="SerilogAnalyzer" Version="0.15.0">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
		</PackageReference>
		<PackageReference Include="SmartanAlyzers.ExceptionAnalyzer" Version="1.0.10">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
		</PackageReference>
		<PackageReference Include="SmartAnalyzers.MultithreadingAnalyzer" Version="1.1.31">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
		</PackageReference>
	</ItemGroup>

	<ItemGroup Label="SourceLink" Condition="$(IsPackable)">
		<PackageReference Include="Microsoft.SourceLink.Bitbucket.Git" Version="1.0.0" PrivateAssets="All"/>
		<PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0" PrivateAssets="All"/>
		<PackageReference Include="Microsoft.SourceLink.GitLab" Version="1.0.0" PrivateAssets="All"/>

		<SourceLinkGitLabHost Include="git.kritikos.io" />
		<SourceLinkGitHubHost Include="github.com" />
		<SourceLinkBitBucketHost Include="bitbucket.org" />
	</ItemGroup>

	<ItemGroup Label="TestCoverage" Condition="$(IsTest)">
		<PackageReference Include="coverlet.msbuild" Version="2.8.0">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="coverlet.collector" Version="1.2.0">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
	</ItemGroup>

	<ItemGroup Label="License Import" Condition="Exists('$(MSBuildThisFileDirectory)\LICENSE.md')">
		<None Include="..\..\LICENSE.md">
			<Pack>True</Pack>
			<PackagePath></PackagePath>
		</None>
	</ItemGroup>

	<PropertyGroup Label="License" Condition="Exists('$(MSBuildThisFileDirectory)\LICENSE.md')">
		<PackageLicenseFile>LICENSE.md</PackageLicenseFile>
	</PropertyGroup>
</Project>
